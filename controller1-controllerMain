
import threading
from threading import Thread
import socket
from socket import *
import time
from time import ctime
import netifaces
import re
import os
#change the ethernet address as per your card
#there may be a prob when getting bd address since it takes dockers bd address
#only prob with bd and ip works fine
#client gets ip address from bd and sends the msg to the server
class Controller1():

    def __init__(self):

        self.sock = socket(AF_INET, SOCK_DGRAM)

    def receive_bd(self):
        #receive broadcast
        def get_ip_data(ether_adapter):

            ip_data = os.popen("ifconfig " + ether_adapter)
            for line in ip_data:
                match2 = re.search(r'broadcast\s+(\d+.\d+.\d+.\d+)', line)
                if match2:
                    bd = match2.group(1)
                    return bd


        if __name__ == "__main__":
            ethernet_card = "wlp1s0"
            inet_list = get_ip_data(ethernet_card)
            #print(inet_list)
        self.sock.bind((inet_list, 12345))
        msg, client = self.sock.recvfrom(1024)
        a=(msg.decode())
        host = a
        print(host)
        #bidirec con ver
        port = 4545
        address = (host, port)
        while (True):
            msg = input("Controller 1 :")
            self.sock.sendto(bytearray(msg, "utf-8"), address)
            reply = self.sock.recvfrom(1000)
            recved = str(reply)
        print("Main Controller: %s " % (recved))
        #send msg to the the ip u just received



if __name__=="__main__":
    C=Controller1()
    C.receive_bd()
